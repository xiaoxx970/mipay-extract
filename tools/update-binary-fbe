#!/sbin/sh

tmp=/tmp/eufix-force-fbe

if [ "$3" ]; then
    zip=$3
    console=/proc/$$/fd/$2
    # write the location of the console buffer to /tmp/console for other scripts to use
    echo "$console" > /tmp/console
else
    console=$(cat /tmp/console)
    [ "$console" ] || console=/proc/$$/fd/1
fi

print() {
    if [ "$1" ]; then
        echo "ui_print $1" > "$console"
    else
        echo "ui_print  " > "$console"
    fi
    echo
}

abort() {
    [ "$1" ] && {
        print "Error: $1"
        print "Aborting..."
    }
    cleanup
    print "Failed to install xiaomi.eu rom fix!"
    exit 1
}

cleanup() {
    [ "$zip" ] && rm /tmp/console
    [ -d "$tmp" ] && rm -rf "$tmp"
}

setperm() {
    find "$3" -type d -exec chmod "$1" {} \;
    find "$3" -type f -exec chmod "$2" {} \;
}

try_del() {
    app=/system/$1
    if [ -d $app ]; then
        print "Removing ${app}..."
        rm -r "$app" || print "failed to remove $app"
    else
        print "Skipping ${app}"
    fi
}

force_encrypt_oreo() {
    fstab=/system/vendor/etc/fstab.qcom
    if ! [ -f "$fstab" ]; then
        fstab="/system${fstab}"
    fi
    if ! [ -f "$fstab" ]; then
        print "No fstab.qcom in vendor, skipping..."
    else
        sed -i "
            s/\b\(encryptable\)=/fileencryption=/g
        " "$fstab"
        if ! grep -q '=ice,quota' "$fstab"; then
            sed -i "s/=ice/=ice,quota/g" "$fstab"
        fi
        echo "Enabled force encryption for /data"
    fi
}

print "*******************************"
print "* MIUI 9/10 xiaomi.eu Rom Fix *"
print "* Force Encryption Workaround *"
print "*******************************"
print "by @linusyang"

print "Mounting filesystems..."
mount /system
if mount | grep ro | grep -q /system; then
    mount -o remount,rw /system || print "Failed to mount read-write!"
    print 'Remount as read-write...'
fi

# print "Removing evil apps..."
# try_del app/MiuiDaemon

print "Enabling force encryption for Oreo..."
force_encrypt_oreo

umount /system
cleanup
print "Finished!"
